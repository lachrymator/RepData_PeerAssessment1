install.packages(c("slidify", "ggplot2", "devtools"))
library(ggplot2)
search()
find.package("devtools")
install("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
install.packages("boot")
install.packages("class")
install.packages("cluster")
1
1L
inf
Inf
1/0
0/0
z<-1
x<-1
print(x)
msg<- "hello"
print(x)
print(msg)
x
msg
X<-1:20
x
X
X<-c(0.6,0.6)
z<-vector("numeric", 10)
y<-c(TRUE,2)
y<-c(TRUE, "a")
m<-1:10
dim(m)<-c(2,5)
m
R.version.string
install.packages("swirl")
library swirl
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z(c(1.1,9,3.14))
z<-(c(1.1,9,3.14))
z<-c(1.1,9,3.14)
?c
z
(z, 555, z)
c(z, 555,z)
z*2+100
mySqrt <- sqrt(z-1)
mysqrt
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
x<-4
class(x)
x<-c(4,"a",TRUE)
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
x<-list(2, "a", "b", TRUE)
x[[2]]
q<-x[[2]]
class(q)
install.packages("Rtools")
install.packages("RMySQL")
install.packages("RMySQL", type="source")
library(RMySQL)
library(RMySQL)
install.packages("RMySQL")
inst
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
library(RMySQL)
q()
help("<<-")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:3)
makeVector()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp[1,]*temp[2,]
sum(temp[1,]*temp[2,])
library(ggplot12)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
?geom_rug
?geom_line
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
head(Diet)
BodyWeight
?panel.abline()
panel.abline()
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set()
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) +geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess"
)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
install.packages("knitr")
library(knitr)
setwd("C:\Coursera\RepResearch\RepData_PeerAssessment1")
setwd("C:/Coursera/RepResearch/RepData_PeerAssessment1")
## File Location
fileurl<- "http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
## Download file to a temporary location, read in dataframe, and delete tempfile
temp<-tempfile()
download.file(fileurl, temp)
filename<-unzip(temp, list=TRUE)[[1]]
message("Reading in data frame... please wait.")
data<-read.csv(unzip(temp,filename), header = TRUE, sep = ";", na.strings = c("?"))
data<-read.csv(unzip(temp,filename), header = TRUE)
data<-read.csv(unzip(temp,filename))
unzip(temp, list=TRUE)
## File Location
fileurl<- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
## Download file to a temporary location, read in dataframe, and delete tempfile
temp<-tempfile()
download.file(fileurl, temp)
filename<-unzip(temp, list=TRUE)[[1]]
message("Reading in data frame... please wait.")
data<-read.csv(unzip(temp,filename))
unlink(temp)
unlink(filename)
str(data)
data$steps
i
data<-read.csv(unzip(temp,filename), na.strings = "NA")
temp<-tempfile()
download.file(fileurl, temp)
filename<-unzip(temp, list=TRUE)[[1]]
message("Reading in data frame... please wait.")
data<-read.csv(unzip(temp,filename), na.strings = "NA")
unlink(temp)
unlink(filename)
data$Steps
data$steps
summary(data)
?xtable
install.packages("xtable")
?xtable
?xt
xtable
library(xtable)
xtable
?xtable
summary(data)
xtable(summary(data))
xtable(summary(data))
?xtable
class(data)
classes
class(data$date)
as.date
?as.date
?as.Date
head(data$Date)
head(data$date)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
hist(data$steps)
?qplot
library(ggplot2)
?qplot
qplot(date, steps, data = data, geom = "histogram")
qplot(steps, data = data, geom = "histogram")
qplot(date, data = data, geom = "histogram")
qplot(date, steps, data = data, geom = "histogram")
qplot(date, steps, data = data, geom = "histogram", stat = "bin")
qplot(date, data = data, geom = "histogram", stat = "steps)
qplot(date, data = data, geom = "histogram", stat = steps)
qplot(date, data = data, geom = "bar", stat = steps)
ggplot2(data)
ggplot(data)
p <- ggplot(data)
p + aes(steps,..count..)
p + aes(steps,..count..) + geom_histogram()
range(data$date)
?ddply
library(plyr)
?ddply
data$dailytotal <- ddply(data, c("date"), summarize, dailytotal = sum(steps))
dailytotals <- ddply(data, c("date"), summarize, dailytotal = sum(steps))
dailytotals
qplot(data = dailytotals, geom = "histogram")
qplot(data = dailytotals, x = dailytotal, geom = "histogram")
?ddply
?sum
dailytotals
dailytotals <- ddply(data, c("date"), summarize, dailytotal = sum(steps, na.rm = TRUE))
head(dailytotals)
dailytotals
range dailytotals
range(dailytotals)
range(dailytotals$dailytotal)
21000/30
mean <- mean(dailytotals$dailytotal)
median <- median(dailytotal$dailytotal)
median <- median(dailytotals$dailytotal)
median <- as.numeric(median(dailytotals$dailytotal))
mean <- mean(dailytotals$dailytotal, digits = 2)
mean <- mean(dailytotals$dailytotal, digits = 2)
median <- as.numeric(median(dailytotals$dailytotal))
qplot(data = dailytotals, x = dailytotal, geom = "histogram", binwidth = 1000)
mean <- mean(dailytotals$dailytotal, digits = 2)
median <- as.numeric(median(dailytotals$dailytotal))
mean <- as.numeric(mean(dailytotals$dailytotal), digits = 2)
mean <- format(mean(dailytotals$dailytotal), digits = 2)
mean <- format(mean(dailytotals$dailytotal), digits = 6)
mean <- format(mean(dailytotals$dailytotal), digits = 0)
median <- format(median(dailytotals$dailytotal), digits = 0)
data
head(data)
temp<-tempfile()
download.file(fileurl, temp)
filename<-unzip(temp, list=TRUE)[[1]]
data<-read.csv(unzip(temp,filename), na.strings = "NA")
head(data$date)
data$date == 2012-10-01
data[date == "2012-10-01",]
data[,date == "2012-10-01"]
data[[,date == "2012-10-01"]]
data[[,date == 1]]
data[,date == 1]
data[,data$date == 1]
data[data$date == 1,]
data[data$date == "2012-10-01",]
